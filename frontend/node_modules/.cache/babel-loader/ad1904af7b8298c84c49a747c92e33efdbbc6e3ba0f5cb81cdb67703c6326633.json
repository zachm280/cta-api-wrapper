{"ast":null,"code":"import { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle(_ref, ctx) {\n  let {\n    bounds,\n    ...options\n  } = _ref;\n  const instance = new LeafletRectangle(bounds, options);\n  return {\n    instance,\n    context: {\n      ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});","map":{"version":3,"names":["createPathComponent","Rectangle","LeafletRectangle","createRectangle","_ref","ctx","bounds","options","instance","context","overlayContainer","updateRectangle","layer","props","prevProps","setBounds"],"sources":["C:/Users/zachm/OneDrive/Documents/GitHub/cta-api-wrapper/frontend/node_modules/react-leaflet/esm/Rectangle.js"],"sourcesContent":["import { createPathComponent } from '@react-leaflet/core';\nimport { Rectangle as LeafletRectangle } from 'leaflet';\nexport const Rectangle = createPathComponent(function createRectangle(_ref, ctx) {\n  let {\n    bounds,\n    ...options\n  } = _ref;\n  const instance = new LeafletRectangle(bounds, options);\n  return {\n    instance,\n    context: { ...ctx,\n      overlayContainer: instance\n    }\n  };\n}, function updateRectangle(layer, props, prevProps) {\n  if (props.bounds !== prevProps.bounds) {\n    layer.setBounds(props.bounds);\n  }\n});"],"mappings":"AAAA,SAASA,mBAAmB,QAAQ,qBAAqB;AACzD,SAASC,SAAS,IAAIC,gBAAgB,QAAQ,SAAS;AACvD,OAAO,MAAMD,SAAS,GAAGD,mBAAmB,CAAC,SAASG,eAAeA,CAACC,IAAI,EAAEC,GAAG,EAAE;EAC/E,IAAI;IACFC,MAAM;IACN,GAAGC;EACL,CAAC,GAAGH,IAAI;EACR,MAAMI,QAAQ,GAAG,IAAIN,gBAAgB,CAACI,MAAM,EAAEC,OAAO,CAAC;EACtD,OAAO;IACLC,QAAQ;IACRC,OAAO,EAAE;MAAE,GAAGJ,GAAG;MACfK,gBAAgB,EAAEF;IACpB;EACF,CAAC;AACH,CAAC,EAAE,SAASG,eAAeA,CAACC,KAAK,EAAEC,KAAK,EAAEC,SAAS,EAAE;EACnD,IAAID,KAAK,CAACP,MAAM,KAAKQ,SAAS,CAACR,MAAM,EAAE;IACrCM,KAAK,CAACG,SAAS,CAACF,KAAK,CAACP,MAAM,CAAC;EAC/B;AACF,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}