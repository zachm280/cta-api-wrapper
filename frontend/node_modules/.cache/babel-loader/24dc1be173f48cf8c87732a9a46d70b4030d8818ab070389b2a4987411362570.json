{"ast":null,"code":"import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n    return function removePopup() {\n      var _context$overlayConta;\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});","map":{"version":3,"names":["createOverlayComponent","Popup","LeafletPopup","useEffect","createPopup","props","context","instance","overlayContainer","usePopupLifecycle","element","setOpen","onClose","onOpen","position","addPopup","onPopupOpen","event","popup","update","onPopupClose","map","on","popupopen","popupclose","setLatLng","openOn","bindPopup","removePopup","_context$overlayConta","off","unbindPopup","removeLayer"],"sources":["C:/Users/zachm/OneDrive/Documents/GitHub/cta-api-wrapper/frontend/node_modules/react-leaflet/esm/Popup.js"],"sourcesContent":["import { createOverlayComponent } from '@react-leaflet/core';\nimport { Popup as LeafletPopup } from 'leaflet';\nimport { useEffect } from 'react';\nexport const Popup = createOverlayComponent(function createPopup(props, context) {\n  return {\n    instance: new LeafletPopup(props, context.overlayContainer),\n    context\n  };\n}, function usePopupLifecycle(element, context, props, setOpen) {\n  const {\n    onClose,\n    onOpen,\n    position\n  } = props;\n  useEffect(function addPopup() {\n    const {\n      instance\n    } = element;\n\n    function onPopupOpen(event) {\n      if (event.popup === instance) {\n        instance.update();\n        setOpen(true);\n        onOpen == null ? void 0 : onOpen();\n      }\n    }\n\n    function onPopupClose(event) {\n      if (event.popup === instance) {\n        setOpen(false);\n        onClose == null ? void 0 : onClose();\n      }\n    }\n\n    context.map.on({\n      popupopen: onPopupOpen,\n      popupclose: onPopupClose\n    });\n\n    if (context.overlayContainer == null) {\n      // Attach to a Map\n      if (position != null) {\n        instance.setLatLng(position);\n      }\n\n      instance.openOn(context.map);\n    } else {\n      // Attach to container component\n      context.overlayContainer.bindPopup(instance);\n    }\n\n    return function removePopup() {\n      var _context$overlayConta;\n\n      context.map.off({\n        popupopen: onPopupOpen,\n        popupclose: onPopupClose\n      });\n      (_context$overlayConta = context.overlayContainer) == null ? void 0 : _context$overlayConta.unbindPopup();\n      context.map.removeLayer(instance);\n    };\n  }, [element, context, setOpen, onClose, onOpen, position]);\n});"],"mappings":"AAAA,SAASA,sBAAsB,QAAQ,qBAAqB;AAC5D,SAASC,KAAK,IAAIC,YAAY,QAAQ,SAAS;AAC/C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,MAAMF,KAAK,GAAGD,sBAAsB,CAAC,SAASI,WAAWA,CAACC,KAAK,EAAEC,OAAO,EAAE;EAC/E,OAAO;IACLC,QAAQ,EAAE,IAAIL,YAAY,CAACG,KAAK,EAAEC,OAAO,CAACE,gBAAgB,CAAC;IAC3DF;EACF,CAAC;AACH,CAAC,EAAE,SAASG,iBAAiBA,CAACC,OAAO,EAAEJ,OAAO,EAAED,KAAK,EAAEM,OAAO,EAAE;EAC9D,MAAM;IACJC,OAAO;IACPC,MAAM;IACNC;EACF,CAAC,GAAGT,KAAK;EACTF,SAAS,CAAC,SAASY,QAAQA,CAAA,EAAG;IAC5B,MAAM;MACJR;IACF,CAAC,GAAGG,OAAO;IAEX,SAASM,WAAWA,CAACC,KAAK,EAAE;MAC1B,IAAIA,KAAK,CAACC,KAAK,KAAKX,QAAQ,EAAE;QAC5BA,QAAQ,CAACY,MAAM,CAAC,CAAC;QACjBR,OAAO,CAAC,IAAI,CAAC;QACbE,MAAM,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,MAAM,CAAC,CAAC;MACpC;IACF;IAEA,SAASO,YAAYA,CAACH,KAAK,EAAE;MAC3B,IAAIA,KAAK,CAACC,KAAK,KAAKX,QAAQ,EAAE;QAC5BI,OAAO,CAAC,KAAK,CAAC;QACdC,OAAO,IAAI,IAAI,GAAG,KAAK,CAAC,GAAGA,OAAO,CAAC,CAAC;MACtC;IACF;IAEAN,OAAO,CAACe,GAAG,CAACC,EAAE,CAAC;MACbC,SAAS,EAAEP,WAAW;MACtBQ,UAAU,EAAEJ;IACd,CAAC,CAAC;IAEF,IAAId,OAAO,CAACE,gBAAgB,IAAI,IAAI,EAAE;MACpC;MACA,IAAIM,QAAQ,IAAI,IAAI,EAAE;QACpBP,QAAQ,CAACkB,SAAS,CAACX,QAAQ,CAAC;MAC9B;MAEAP,QAAQ,CAACmB,MAAM,CAACpB,OAAO,CAACe,GAAG,CAAC;IAC9B,CAAC,MAAM;MACL;MACAf,OAAO,CAACE,gBAAgB,CAACmB,SAAS,CAACpB,QAAQ,CAAC;IAC9C;IAEA,OAAO,SAASqB,WAAWA,CAAA,EAAG;MAC5B,IAAIC,qBAAqB;MAEzBvB,OAAO,CAACe,GAAG,CAACS,GAAG,CAAC;QACdP,SAAS,EAAEP,WAAW;QACtBQ,UAAU,EAAEJ;MACd,CAAC,CAAC;MACF,CAACS,qBAAqB,GAAGvB,OAAO,CAACE,gBAAgB,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGqB,qBAAqB,CAACE,WAAW,CAAC,CAAC;MACzGzB,OAAO,CAACe,GAAG,CAACW,WAAW,CAACzB,QAAQ,CAAC;IACnC,CAAC;EACH,CAAC,EAAE,CAACG,OAAO,EAAEJ,OAAO,EAAEK,OAAO,EAAEC,OAAO,EAAEC,MAAM,EAAEC,QAAQ,CAAC,CAAC;AAC5D,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}