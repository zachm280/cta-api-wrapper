{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\zachm\\\\OneDrive\\\\Documents\\\\GitHub\\\\cta-api-wrapper\\\\frontend\\\\src\\\\components\\\\ArrivalsList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Paper, Typography, List, ListItem, Box, Chip, CircularProgress, Alert } from '@mui/material';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArrivalsList = ({\n  stop\n}) => {\n  _s();\n  const [arrivals, setArrivals] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const fetchArrivals = async () => {\n    try {\n      setLoading(true);\n      setError(null);\n      const response = await fetch(`http://localhost:8000/api/arrivals/${stop.stop_id}`);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      setArrivals(data);\n    } catch (err) {\n      setError(`Error fetching arrivals: ${err.message}`);\n    } finally {\n      setLoading(false);\n    }\n  };\n  useEffect(() => {\n    fetchArrivals();\n    const interval = setInterval(fetchArrivals, 30000); // Update every 30 seconds\n    return () => clearInterval(interval);\n  }, [stop.stop_id]);\n  if (loading && arrivals.length === 0) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        display: 'flex',\n        justifyContent: 'center',\n        p: 2\n      },\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this);\n  }\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(Alert, {\n      severity: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    sx: {\n      p: 2,\n      mb: 2\n    },\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h6\",\n      gutterBottom: true,\n      children: stop.stop_name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      children: arrivals.length > 0 ? arrivals.map((arrival, index) => /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            width: '100%'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              alignItems: 'center',\n              mb: 1\n            },\n            children: [/*#__PURE__*/_jsxDEV(Chip, {\n              label: arrival.route,\n              size: \"small\",\n              sx: {\n                mr: 1,\n                bgcolor: arrival.route_color || '#666',\n                color: 'white'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              children: [\"To \", arrival.destination]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              display: 'flex',\n              justifyContent: 'space-between',\n              alignItems: 'center'\n            },\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: [\"Arriving in \", arrival.minutes, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, this), arrival.is_delayed && /*#__PURE__*/_jsxDEV(Chip, {\n              label: \"Delayed\",\n              size: \"small\",\n              color: \"error\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this)\n      }, `${arrival.route}-${arrival.arrival_time}-${index}`, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 13\n      }, this)) : /*#__PURE__*/_jsxDEV(ListItem, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          color: \"text.secondary\",\n          children: \"No upcoming arrivals\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n};\n_s(ArrivalsList, \"dG2e1HjHH4is4f2m6jse+P4U7Cg=\");\n_c = ArrivalsList;\nexport default ArrivalsList;\nvar _c;\n$RefreshReg$(_c, \"ArrivalsList\");","map":{"version":3,"names":["React","useEffect","useState","Paper","Typography","List","ListItem","Box","Chip","CircularProgress","Alert","jsxDEV","_jsxDEV","ArrivalsList","stop","_s","arrivals","setArrivals","loading","setLoading","error","setError","fetchArrivals","response","fetch","stop_id","ok","Error","status","data","json","err","message","interval","setInterval","clearInterval","length","sx","display","justifyContent","p","children","fileName","_jsxFileName","lineNumber","columnNumber","severity","mb","variant","gutterBottom","stop_name","map","arrival","index","width","alignItems","label","route","size","mr","bgcolor","route_color","color","destination","minutes","is_delayed","arrival_time","_c","$RefreshReg$"],"sources":["C:/Users/zachm/OneDrive/Documents/GitHub/cta-api-wrapper/frontend/src/components/ArrivalsList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Paper,\r\n  Typography,\r\n  List,\r\n  ListItem,\r\n  Box,\r\n  Chip,\r\n  CircularProgress,\r\n  Alert,\r\n} from '@mui/material';\r\n\r\ninterface Arrival {\r\n  route: string;\r\n  destination: string;\r\n  arrival_time: string;\r\n  minutes: number;\r\n  is_delayed: boolean;\r\n  route_color?: string;\r\n}\r\n\r\ninterface Stop {\r\n  stop_id: number;\r\n  stop_name: string;\r\n  latitude: number;\r\n  longitude: number;\r\n  routes: string[];\r\n  distance: number;\r\n}\r\n\r\ninterface ArrivalsListProps {\r\n  stop: Stop;\r\n}\r\n\r\nconst ArrivalsList: React.FC<ArrivalsListProps> = ({ stop }) => {\r\n  const [arrivals, setArrivals] = useState<Arrival[]>([]);\r\n  const [loading, setLoading] = useState(false);\r\n  const [error, setError] = useState<string | null>(null);\r\n\r\n  const fetchArrivals = async () => {\r\n    try {\r\n      setLoading(true);\r\n      setError(null);\r\n      const response = await fetch(`http://localhost:8000/api/arrivals/${stop.stop_id}`);\r\n      if (!response.ok) {\r\n        throw new Error(`HTTP error! status: ${response.status}`);\r\n      }\r\n      const data = await response.json();\r\n      setArrivals(data);\r\n    } catch (err) {\r\n      setError(`Error fetching arrivals: ${(err as Error).message}`);\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchArrivals();\r\n    const interval = setInterval(fetchArrivals, 30000); // Update every 30 seconds\r\n    return () => clearInterval(interval);\r\n  }, [stop.stop_id]);\r\n\r\n  if (loading && arrivals.length === 0) {\r\n    return (\r\n      <Box sx={{ display: 'flex', justifyContent: 'center', p: 2 }}>\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  if (error) {\r\n    return <Alert severity=\"error\">{error}</Alert>;\r\n  }\r\n\r\n  return (\r\n    <Paper sx={{ p: 2, mb: 2 }}>\r\n      <Typography variant=\"h6\" gutterBottom>\r\n        {stop.stop_name}\r\n      </Typography>\r\n      <List>\r\n        {arrivals.length > 0 ? (\r\n          arrivals.map((arrival, index) => (\r\n            <ListItem key={`${arrival.route}-${arrival.arrival_time}-${index}`}>\r\n              <Box sx={{ width: '100%' }}>\r\n                <Box sx={{ display: 'flex', alignItems: 'center', mb: 1 }}>\r\n                  <Chip\r\n                    label={arrival.route}\r\n                    size=\"small\"\r\n                    sx={{\r\n                      mr: 1,\r\n                      bgcolor: arrival.route_color || '#666',\r\n                      color: 'white',\r\n                    }}\r\n                  />\r\n                  <Typography variant=\"body1\">\r\n                    To {arrival.destination}\r\n                  </Typography>\r\n                </Box>\r\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\r\n                  <Typography variant=\"body2\" color=\"text.secondary\">\r\n                    Arriving in {arrival.minutes} minutes\r\n                  </Typography>\r\n                  {arrival.is_delayed && (\r\n                    <Chip\r\n                      label=\"Delayed\"\r\n                      size=\"small\"\r\n                      color=\"error\"\r\n                      variant=\"outlined\"\r\n                    />\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </ListItem>\r\n          ))\r\n        ) : (\r\n          <ListItem>\r\n            <Typography color=\"text.secondary\">\r\n              No upcoming arrivals\r\n            </Typography>\r\n          </ListItem>\r\n        )}\r\n      </List>\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default ArrivalsList; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}