{"ast":null,"code":"import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}","map":{"version":3,"names":["useEffect","useAttribution","useLeafletContext","useEventHandlers","withPane","useLayerLifecycle","element","context","addLayer","container","layerContainer","map","instance","removeLayer","_context$layerContain","createLayerHook","useElement","useLayer","props","elementRef","attribution","current","eventHandlers"],"sources":["C:/Users/zachm/OneDrive/Documents/GitHub/cta-api-wrapper/frontend/node_modules/@react-leaflet/core/esm/layer.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useAttribution } from './attribution';\nimport { useLeafletContext } from './context';\nimport { useEventHandlers } from './events';\nimport { withPane } from './pane';\nexport function useLayerLifecycle(element, context) {\n  useEffect(function addLayer() {\n    const container = context.layerContainer ?? context.map;\n    container.addLayer(element.instance);\n    return function removeLayer() {\n      var _context$layerContain;\n\n      (_context$layerContain = context.layerContainer) == null ? void 0 : _context$layerContain.removeLayer(element.instance);\n      context.map.removeLayer(element.instance);\n    };\n  }, [context, element]);\n}\nexport function createLayerHook(useElement) {\n  return function useLayer(props) {\n    const context = useLeafletContext();\n    const elementRef = useElement(withPane(props, context), context);\n    useAttribution(context.map, props.attribution);\n    useEventHandlers(elementRef.current, props.eventHandlers);\n    useLayerLifecycle(elementRef.current, context);\n    return elementRef;\n  };\n}"],"mappings":"AAAA,SAASA,SAAS,QAAQ,OAAO;AACjC,SAASC,cAAc,QAAQ,eAAe;AAC9C,SAASC,iBAAiB,QAAQ,WAAW;AAC7C,SAASC,gBAAgB,QAAQ,UAAU;AAC3C,SAASC,QAAQ,QAAQ,QAAQ;AACjC,OAAO,SAASC,iBAAiBA,CAACC,OAAO,EAAEC,OAAO,EAAE;EAClDP,SAAS,CAAC,SAASQ,QAAQA,CAAA,EAAG;IAC5B,MAAMC,SAAS,GAAGF,OAAO,CAACG,cAAc,IAAIH,OAAO,CAACI,GAAG;IACvDF,SAAS,CAACD,QAAQ,CAACF,OAAO,CAACM,QAAQ,CAAC;IACpC,OAAO,SAASC,WAAWA,CAAA,EAAG;MAC5B,IAAIC,qBAAqB;MAEzB,CAACA,qBAAqB,GAAGP,OAAO,CAACG,cAAc,KAAK,IAAI,GAAG,KAAK,CAAC,GAAGI,qBAAqB,CAACD,WAAW,CAACP,OAAO,CAACM,QAAQ,CAAC;MACvHL,OAAO,CAACI,GAAG,CAACE,WAAW,CAACP,OAAO,CAACM,QAAQ,CAAC;IAC3C,CAAC;EACH,CAAC,EAAE,CAACL,OAAO,EAAED,OAAO,CAAC,CAAC;AACxB;AACA,OAAO,SAASS,eAAeA,CAACC,UAAU,EAAE;EAC1C,OAAO,SAASC,QAAQA,CAACC,KAAK,EAAE;IAC9B,MAAMX,OAAO,GAAGL,iBAAiB,CAAC,CAAC;IACnC,MAAMiB,UAAU,GAAGH,UAAU,CAACZ,QAAQ,CAACc,KAAK,EAAEX,OAAO,CAAC,EAAEA,OAAO,CAAC;IAChEN,cAAc,CAACM,OAAO,CAACI,GAAG,EAAEO,KAAK,CAACE,WAAW,CAAC;IAC9CjB,gBAAgB,CAACgB,UAAU,CAACE,OAAO,EAAEH,KAAK,CAACI,aAAa,CAAC;IACzDjB,iBAAiB,CAACc,UAAU,CAACE,OAAO,EAAEd,OAAO,CAAC;IAC9C,OAAOY,UAAU;EACnB,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}